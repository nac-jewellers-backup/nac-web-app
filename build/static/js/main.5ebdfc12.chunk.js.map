{"version":3,"sources":["config.js","hooks/GraphqlHook.js","utils/index.js","context/NetworkContext.js","context/GlobalContext.js","queries/productListing.js","context/FilterOptionsContext.js","context/index.js","context/ProductDetailContext.js","mappers/productlist.js","hooks/NetworkHooks.js","screens/Loading.js","context/CartContext.js","queries/cart.js","queries/productdetail.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","API_URL","HOME_PAGE_URL","CDN_URL","useGraphql","query","mapper","variables","arguments","length","undefined","initRequest","_React$useState","React","useState","_React$useState2","Object","D_Jayasoorya_NAC_Ecommerce_nac_ecom_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","loading","setLoading","_React$useState3","_React$useState4","error","setError","_React$useState5","_React$useState6","data","setData","_React$useState7","_React$useState8","mappedData","setMappedData","_React$useContext$Net","useContext","NetworkContext","NetworkCtx","uri","graphqlUrl","cdnUrl","client","createApolloFetch","makeRequest","reqvars","D_Jayasoorya_NAC_Ecommerce_nac_ecom_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","then","resdata","mapped","console","catch","err","useEffect","resolutions","res","size","filterGenerator","type","value","table","clause","D_Jayasoorya_NAC_Ecommerce_nac_ecom_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","some","initialCtx","apiUrl","token","homePage","concat","LoginCtx","email","password","setNetworkCtx","createContext","NetworkProvider","Consumer","props","D_Jayasoorya_NAC_Ecommerce_nac_ecom_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Provider","children","GLobalCtx","loggedIn","setGlobaCtx","GlobalContext","GlobalProvider","slicedToArray","Globalctx","setGlobalCtx","react_default","conditions","filters","filter","map","val","String","keys","k","fquery","fc","filterProductMatrix","values","objectSpread","FilterOptionsContext","FilterOptionsCtx","Offers","Availability","ProductType","style","Material","Theme","Collection","metalColor","MetalPurity","Occasion","NoOfStones","Gender","stoneColor","stoneShape","offset","dataArr","first","mappedFilters","setFilters","filterData","setOffset","setFirst","updateProductList","FilterOptionsProvider","withRouter","material","setDataArr","_React$useState9","_React$useState10","setMappedFilters","_React$useState11","filterLogic","_React$useState12","setFilterLogic","t","toConsumableArray","window","location","search","urlSearchparams","decodeURI","replace","split","obj","log","queries","paramObjects","paramsAo","splitval","defineProperty","_useGraphql","_useNetworkRequest","useNetworkRequest","ntxdata","makeFetch","info","conditionFilters","conditionImageColor","MetalColor","offsetvar","firstvar","conditionImage","fk","fv","qt","push","encodeURI","join","history","pathname","pathQueries","productlist","newUpdatedList","newObj","updateFilters","len","bodyvar","keyy","toLowerCase","GlobalContext_GlobalProvider","ProductDetailContext","CartContext","ProductDetailCtx","productId","defaultVariants","diamondType","purity","skuSize","skuId","ProductDetailProvider","PRODUCTDETAILS","productDetailProps","conditionfilter","generatedSku","href","urlssplit","urlReplace","productnamefilter","productListByProductId","productName","equalTo","number","entries","constructor","allTransSkuLists","nodes","handleProductDetatiContext","variants","metalColors","productColor","ProductVariants","ConditionimagesMetalColor","react__WEBPACK_IMPORTED_MODULE_2___default","injectUrl","url","baseUi","img","imageUrl","hoverImage","placeImage","find","fd","ishover","mapperdata","allProductLists","_d","totalCount","price","transSkuListsByProductId","discountPrice","offerPrice","markupPrice","title","save","image","productImagesByProductId","productMaterialsByProductSku","materialName","productType","useDummyRequest","setMapped","status","statusText","mappeddata","urlSignin","body","_React$useState13","_React$useState14","_React$useState15","_React$useState16","_React$useState17","_React$useState18","_React$useState19","_React$useState20","setStatus","method","bodyvariable","JSON","stringify","parse","fetch","headers","Content-Type","Response","message","json","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Loading","className","id","CartCtx","cartFilters","setCartFilters","CartProvider","skus","localStorage","getItem","products","sku_id","productList","outerTheme","createMuiTheme","require","outerThemes","responsiveFontSizes","RouterApp","lazy","Promise","all","e","bind","App","context","ThemeProvider","theme","react_router_dom","Suspense","fallback","isLocalhost","Boolean","hostname","match","_callee2","config","regenerator_default","wrap","_context2","prev","next","requestNotificationPermission","addEventListener","swUrl","process","checkValidServiceWorker","navigator","serviceWorker","ready","registerValidSW","stop","register","registration","onupdatefound","installingWorker","installing","sendNotification","onstatechange","asyncToGenerator","mark","_callee","updating","updateMessage","installedMessage","_context","state","controller","onUpdate","onSuccess","_callee3","_context3","check","abrupt","Notification","requestPermission","sent","setItem","_callee4","_context4","response","contentType","get","indexOf","unregister","reload","ReactDOM","render","src_App","document","getElementById","_x","_register","apply","this"],"mappings":"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","file":"static/js/main.5ebdfc12.chunk.js","sourcesContent":["export const API_URL = \"https://api.stylori.net\"\r\nexport const HOME_PAGE_URL = \"\"\r\nexport const CDN_URL = \"https://assets.stylori.net/base_images/\"","import React from 'react';\r\nimport { createApolloFetch } from 'apollo-fetch';\r\nimport { NetworkContext } from 'context/NetworkContext';\r\n\r\nexport const useGraphql = (query, mapper, variables = {}, initRequest = false) => {\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = React.useState(false);\r\n    const [data, setData] = React.useState({});\r\n    const [mappedData, setMappedData] = React.useState({});\r\n    const { NetworkCtx: { graphqlUrl: uri, cdnUrl } } = React.useContext(NetworkContext);\r\n    const client = createApolloFetch({ uri });\r\n\r\n    const makeRequest = (reqvars) => {\r\n       \r\n        client({ query, variables: { ...variables, ...reqvars } }).then(resdata => {\r\n            setLoading(false);\r\n            setError(false);\r\n            setData(resdata);\r\n            if (mapper && data) {\r\n                try {\r\n                    let mapped = mapper(data,cdnUrl);\r\n                    setMappedData(mapped);\r\n                } catch (error) {\r\n                    console.error('MAPPER ERROR', error);\r\n                    setError(true);\r\n                    setMappedData({});\r\n                }\r\n            }\r\n\r\n        }).catch(err => {\r\n            setLoading(false);\r\n            setError(true);\r\n            setData([]);\r\n            setMappedData([]);\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(initRequest) makeRequest();\r\n    }, []);\r\nreturn { error, loading, data, mappedData, makeRequest }\r\n}","export const resolutions = [\r\n  { res: '318x318', size: '375w' },\r\n  { res: '372x372', size: '500w' },\r\n  { res: '276x276', size: '1440w' },\r\n  { res: '422x422', size: '600w' },\r\n  { res: '247x247', size: '768w' },\r\n  { res: '204x204', size: '1024w' },\r\n  { res: '543x543', size: '2560w' },\r\n]\r\n\r\n\r\n// export const detailFilterGen = (type, value, table, clause = \"equalTo\") => {\r\n//   if (type === 'productId') {\r\n//     return {\r\n//       [type]: {\r\n//         [clause]: value\r\n//       }\r\n//     }\r\n//   }\r\n//   else {\r\n    \r\n//       let values = {};\r\n//   // Object.keys(kv).map(k => {\r\n//     values[type] = { [clause]: value } \r\n//   // });\r\n// console.log(values)\r\n//   return values;\r\n//   }\r\n// }\r\n\r\nexport const filterGenerator = (type, value, table, clause = \"equalTo\") => {\r\n  if (table.length > 0) {\r\n    return {\r\n      [table]: {\r\n        some: {\r\n          [type]: {\r\n            [clause]: value\r\n          },\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n  else {\r\n    return {\r\n      [type]: {\r\n        [clause]: value\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { API_URL, HOME_PAGE_URL , CDN_URL} from '../config';\r\n\r\nconst initialCtx = {\r\n    NetworkCtx: {\r\n        apiUrl: API_URL, token: null, homePage: HOME_PAGE_URL, graphqlUrl: `${API_URL}/graphql`, cdnUrl: CDN_URL, LoginCtx:{email:'',password:''}\r\n    },\r\n    \r\n    setNetworkCtx: () => null\r\n}\r\n\r\nexport const NetworkContext = React.createContext(initialCtx);\r\n\r\nexport const NetworkConsumer = NetworkContext.Consumer;\r\n\r\nexport const NetworkProvider = (props) => {\r\n\r\n    const [NetworkCtx, setNetworkCtx] = React.useState(initialCtx.NetworkCtx);\r\n\r\n    return (\r\n        <NetworkContext.Provider value={{ NetworkCtx, setNetworkCtx }} >\r\n            {props.children}\r\n        </NetworkContext.Provider>\r\n    )\r\n};","import React from 'react';\r\n\r\nconst initialCtx = {\r\n    GLobalCtx: {\r\n        loggedIn: false,\r\n    },\r\n\r\n    setGlobaCtx: () => null\r\n}\r\n\r\n\r\nexport const GlobalContext = React.createContext(initialCtx);\r\n\r\nexport const GlobalConsumer = GlobalContext.Consumer;\r\n\r\nexport const GlobalProvider = (props) => {\r\n\r\n    const [Globalctx, setGlobalCtx] = React.useState(initialCtx.GLobalCtx);\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ Globalctx, setGlobalCtx }} >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import { filterGenerator } from \"utils\";\r\n\r\nexport const PRODUCTLIST = `query fetchProductDetails($filter: ProductListFilter,$offsetvar:Int,$firstvar:Int,$conditionImage:ProductImageCondition) {\r\n  allProductLists(filter: $filter,offset: $offsetvar, first:$firstvar,condition: {isactive: true} ) {\r\n    totalCount\r\n    nodes {\r\n      productName\r\n      productId\r\n      defaultSize\r\n      sizeVarient\r\n      productType\r\n      productDiamondsByProductSku {\r\n        nodes {\r\n          diamondClarity\r\n          diamondColour\r\n          diamondType\r\n          stoneWeight\r\n          diamondShape\r\n          diamondSettings\r\n          stoneCount\r\n        }\r\n      }\r\n      transSkuListsByProductId (condition: {isdefault: true}) {\r\n        nodes {\r\n          skuSize\r\n          purity\r\n          diamondType\r\n          metalColor\r\n          markupPrice\r\n          sellingPrice\r\n          discountPrice\r\n          generatedSku\r\n        }\r\n      }\r\n      productMaterialsByProductSku {\r\n        nodes {\r\n          materialName\r\n        }\r\n      }\r\n      productImagesByProductId(condition:$conditionImage,orderBy: IMAGE_POSITION_ASC) {\r\n        nodes {\r\n          ishover\r\n          imageUrl\r\n          imagePosition\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\nexport const filterProductMatrix = (type, value) => {\r\n  let fc = { table: \"\", type: \"\" }\r\n  switch (type) {\r\n    case \"Collection\": {\r\n      fc = {\r\n        table: \"productCollectionsByProductId\",\r\n        type: \"collectionName\"\r\n      }\r\n      break;\r\n    }\r\n    case \"Occasion\": {\r\n      fc = {\r\n        table: \"productOccassionsByProductId\",\r\n        type: \"occassionName\"\r\n      }\r\n      break;\r\n    }\r\n    case \"Theme\": {\r\n      fc = {\r\n        table: \"productThemesByProductId\",\r\n        type: \"themeName\"\r\n      }\r\n      break;\r\n    }\r\n    case \"Style\": {\r\n      fc = {\r\n        table: \"productStylesByProductId\",\r\n        type: \"styleName\"\r\n      }\r\n      break;\r\n    }\r\n    case \"ProductType\": {\r\n      fc = {\r\n        table: \"\",\r\n        type: \"productType\"\r\n      }\r\n      break;\r\n    }\r\n    case \"MetalColor\": {\r\n      fc = {\r\n        table: \"transSkuListsByProductId\",\r\n        type: \"metalColor\"\r\n      }\r\n      break;\r\n    }\r\n    case \"MetalPurity\": {\r\n      fc = {\r\n        table: \"transSkuListsByProductId\",\r\n        type: \"purity\"\r\n      }\r\n      break;\r\n    }\r\n    case \"Gender\": {\r\n      fc = {\r\n        table: \"\",\r\n        type: \"gender\"\r\n      }\r\n      break;\r\n    }\r\n    case \"Material\":{\r\n      fc={\r\n        table:\"productMaterialsByProductSku\",\r\n        type:\"materialName\"\r\n      }\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return filterGenerator(fc.type, value, fc.table);\r\n}\r\n\r\n\r\n\r\nexport const conditions = {\r\n  productId: (id) => ({\r\n    \"condition\": {\r\n      \"productId\": id,\r\n\r\n    }\r\n  }),\r\n  generateFilters: (filters) => {\r\n    let filter = {};\r\n    const filterKeys = filters.map(val => String(Object.keys(val)));\r\n\r\n    filters.map(k => {\r\n      const fkey = String(Object.keys(k));\r\n      const fval = String(Object.values(k));\r\n      const fquery = filterProductMatrix(fkey, fval);\r\n      filter = { ...filter, ...fquery };\r\n    })\r\n\r\n    if (Object.keys(filter).length > 0) {\r\n      return { filter };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}","import React, { useEffect } from 'react';\r\nimport { useGraphql } from 'hooks/GraphqlHook';\r\nimport { useNetworkRequest } from 'hooks/NetworkHooks'\r\nimport { PRODUCTLIST, conditions } from 'queries/productListing';\r\nimport { withRouter } from 'react-router-dom';\r\nimport productlist from 'mappers/productlist';\r\nimport { CDN_URL } from 'config';\r\n\r\n\r\nconst initialCtx = {\r\n    FilterOptionsCtx: {\r\n        filters: {\r\n            Offers: null, Availability: null, ProductType: null, style: null, Material: null, Theme: null, Collection: null, metalColor: null,\r\n            MetalPurity: null, Occasion: null, NoOfStones: null, Gender: null, stoneColor: null, stoneShape: null\r\n        },\r\n        loading: false, error: false, data: [], offset: 0, dataArr: [], first: 24, mappedFilters: []\r\n    },\r\n    setFilters: (filterData) => { },\r\n    setOffset: () => { },\r\n    setFirst: () => { },\r\n    updateProductList: () => { },\r\n}\r\n\r\nexport const FilterOptionsContext = React.createContext(initialCtx);\r\nexport const FilterOptionsConsumer = FilterOptionsContext.Consumer;\r\n\r\nconst Provider = (props) => {\r\n    const [filters, setFilters] = React.useState({\r\n        Offers: {}, Availability: {}, ProductType: {}, style: {}, material: {}, Theme: {}, Collection: {}, metalColor: {},\r\n        MetalPurity: {}, Occasion: {}, NoOfStones: {}, Gender: {}, stoneColor: {}, stoneShape: {}\r\n    });\r\n    const [offset, setOffset] = React.useState(0)\r\n    const [first, setFirst] = React.useState(24)\r\n    const [dataArr, setDataArr] = React.useState([])\r\n    const [mappedFilters, setMappedFilters] = React.useState([])\r\n    const [{ filterLogic }, setFilterLogic] = React.useState({ filterLogic: () => [] });\r\n\r\n    useEffect(() => { setFilterLogic({ filterLogic: (d, t) => t }) }, [filters])\r\n    useEffect(() => { setFilterLogic({ filterLogic: (d, t) => [...d, ...t] }) }, [offset])\r\n\r\n    useEffect(()=>{\r\n        if(window.location.search)\r\n    {\r\n      \r\n      let urlSearchparams = window.location.search;\r\n\r\n      let urlSearchparamsDecode = decodeURI(urlSearchparams)\r\n  \r\n      let urlSearchparamsReplace = urlSearchparamsDecode.replace('?', '')\r\n  \r\n      let urlSearchparamsSplitAmpersand = urlSearchparamsReplace.split('&')\r\n      \r\n      let urlSplitparamsEqual = () => urlSearchparamsSplitAmpersand.map(val =>{ return val.split('=')})\r\n      // let \r\n      let mapUrlParamsSplitEqual = urlSplitparamsEqual();\r\n  \r\n      mapUrlParamsSplitEqual.map(val=>{\r\n          \r\n        let obj = {}\r\n        obj[val[1]]= true\r\n        let value= val[0]\r\n        filters[value]=obj\r\n        console.log('{[val[0]]:obj}',{value:obj})\r\n          setFilters(filters)\r\n      })\r\n   \r\n        \r\n    //   this.handleChange(()=>{} ,true, ()=>{}, mapUrlParamsSplitEqual)\r\n      \r\n    }\r\n    },[])\r\n\r\n\r\n\r\n    var queries = []\r\n    // const qtfArr = []\r\n    const pathQueries = () => {\r\n        \r\n        // var queries = []\r\n        Object.keys(filters).map(fk => {\r\n            const filter = filters[fk];\r\n            const fv = Object.keys(filter);\r\n            if (fv.length > 0) {\r\n                if (filter[fv[0]]) {\r\n                    const qt = `${fk}=${fv[0]}`;\r\n                    const qtf = {}\r\n                    qtf[`${fk}`] = `${fv[0]}`\r\n                    queries.push(qt);\r\n                    // qtfArr.push(qtf);\r\n\r\n                }\r\n\r\n            }\r\n        })\r\n        const query = encodeURI(queries.join(\"&\"));\r\n\r\n        props.history.push({\r\n            pathname: '/stylori',\r\n            search: query,\r\n        })\r\n    }\r\n\r\n    const paramObjects = () => {\r\n        // Destructuring the query parameters from the URL\r\n        let paramsAo = [];\r\n        if (window.location.search) {\r\n            \r\n            let urlSearchparamsDecode = decodeURI(window.location.search);\r\n            let urlParams = urlSearchparamsDecode.replace('?', '').split('&');\r\n            let urlSplitparamsEqual = urlParams.map(val => {\r\n                let splitval = val.split('=');\r\n                return { [splitval[0]]: splitval[1] }\r\n            })\r\n            paramsAo = urlSplitparamsEqual;\r\n            console.log('val', paramsAo)\r\n        }\r\n        return paramsAo;\r\n    }\r\n\r\n    \r\n    const { loading, error, data, makeRequest } = useGraphql(PRODUCTLIST, () => { }, {});\r\n    const { loading: ntx, error: ntxerr, data: ntxdata, makeFetch } = useNetworkRequest('/filterlist', {}, {})\r\n\r\n    console.info('dataResponsed', ntxdata)\r\n    const updateProductList = () => {\r\n        const conditionFilters = conditions.generateFilters(paramObjects())\r\n        const conditionImageColor = {}\r\n        var a = filters.length === 0 ? Object.keys(filters.MetalColor) : ''\r\n        // var a = filters.metalColor ? filters.metalColor : null;\r\n        conditionImageColor[\"productColor\"]=a[0]\r\n        const variables = { ...conditionFilters, offsetvar: offset, firstvar: first,'conditionImage':conditionImageColor  }\r\n        makeRequest(variables)\r\n    }\r\n\r\n\r\n    useEffect(() => setMappedFilters(ntxdata), [ntxdata]);\r\n\r\n    useEffect(() => {\r\n        pathQueries();\r\n        updateProductList();\r\n        \r\n    }, [filters, offset]);\r\n\r\n    useEffect(() => {\r\n        const mapped = productlist(data, CDN_URL);\r\n        const newUpdatedList = filterLogic(dataArr, mapped);\r\n        setDataArr(newUpdatedList);\r\n    }, [data]);\r\n\r\n    // useEffect(()=>{\r\n    //     setFilters(filters);\r\n    // },[filters])\r\n    var newObj = {}\r\n    const updateFilters = (filters) => {\r\n        setFilters(filters);\r\n     \r\n      \r\n        var len;\r\n        let bodyvar;\r\n         bodyvar = paramObjects();\r\n      if(queries.length===0){\r\n          try {\r\n            Object.keys(filters).map(fk => {\r\n                const filter = filters[fk];\r\n                const fv = Object.keys(filter);\r\n                if (fv.length > 0) {\r\n                    if (filter[fv[0]]) {\r\n                        const qt = `${fk}=${fv[0]}`;\r\n                        const qtf = {}\r\n                        qtf[`${fk}`] = `${fv[0]}`\r\n                        queries.push(qt);\r\n                        // qtfArr.push(qtf);\r\n    \r\n                    }\r\n    \r\n                }\r\n            })\r\n            const query = encodeURI(queries.join(\"&\"));\r\n    \r\n            props.history.push({\r\n                pathname: '/stylori',\r\n                search: query,\r\n            })\r\n            bodyvar = paramObjects();\r\n          } catch (error) {\r\n              console.log(error)\r\n          }\r\n      }\r\n        var k = bodyvar.map(val => Object.values(val));\r\n        var keyy = bodyvar.map(val => Object.keys(val))\r\n        console.log(filters)\r\n        len = keyy.length\r\n        while (len--) {\r\n            var key = keyy[len]\r\n            var toLowerCase = key[0].toLowerCase()\r\n            newObj[toLowerCase] = k[len][0]\r\n        }\r\n        makeFetch(newObj);\r\n\r\n        console.log('newObj', filters)\r\n    }\r\n   \r\n    console.log('ntxdataresdata', ntxdata)\r\n    const FilterOptionsCtx = {\r\n        filters, loading, error, data, setFilters: updateFilters, offset, setOffset, dataArr, first, setFirst, mappedFilters\r\n    }\r\n\r\n    return (\r\n        <FilterOptionsContext.Provider value={{ FilterOptionsCtx, setFilters: updateFilters, setOffset, setFirst, updateProductList }} >\r\n            {props.children}\r\n        </FilterOptionsContext.Provider>\r\n    )\r\n};\r\n\r\nexport const FilterOptionsProvider = withRouter(Provider);","export * from './GlobalContext';\r\nexport * from './NetworkContext';\r\nexport * from './ProductDetailContext';\r\nexport * from './FilterOptionsContext';\r\nexport * from './CartContext';","import React, { useEffect } from 'react';\r\nimport { useGraphql } from 'hooks/GraphqlHook';\r\nimport { PRODUCTDETAILS, conditions } from 'queries/productdetail';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst initialCtx = {\r\n    ProductDetailCtx: {\r\n\r\n        filters: { productId: '', defaultVariants: { diamondType: '', metalColor: '', purity: '', skuSize: '' }, skuId: '' },\r\n        loading: false, error: false, data: []\r\n    },\r\n    setFilters: () => { }\r\n}\r\n\r\nexport const ProductDetailContext = React.createContext(initialCtx);\r\n\r\nexport const ProductDetailConsumer = ProductDetailContext.Consumer;\r\n\r\nexport const TabsProvider = (props) => {\r\n    const [filters, setFilters] = React.useState(initialCtx.ProductDetailCtx.filters);\r\n\r\n    let queries = [];\r\n    const pathQueries = () => {\r\n\r\n\r\n        setFilters(filters)\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        let a = props;\r\n\r\n        pathQueries()\r\n    }, [filters])\r\n    let variables;\r\n\r\n\r\n\r\n\r\n    console.log('SkuId......', filters)\r\n    debugger;\r\n\r\n\r\n    const { loading, error, data, makeRequest } = useGraphql(PRODUCTDETAILS, () => { }, {});\r\n    useEffect(() => {\r\n        if (filters.productId === \"\") {\r\n            if(window.location.search.length>0){\r\n                let loc = window.location.search.split('=')\r\n\r\n                let productDetailProps = loc[1];\r\n                filters[\"skuId\"] = productDetailProps\r\n                setFilters(filters)\r\n                variables = { conditionfilter: { 'generatedSku': filters[\"skuId\"] } }\r\n            }\r\n            else {\r\nconsole.log(window.location.href)\r\nvar urls = window.location.href\r\nvar urlssplit = urls.split('/');\r\nvar urlReplace = urlssplit[urlssplit.length-1].replace(/-/g, ' ')\r\nvariables = { productnamefilter: { productListByProductId:{'productName':{equalTo: urlReplace}} }, number:1 }\r\n            }\r\n            \r\n\r\n        }\r\n       \r\n        console.log('filtersDefaultvariants', filters.skuId)\r\n        // var metalColors =filters.defaultVariants.metalColor.length>0 ? {productColor:filters.defaultVariants.metalColor  }: null;\r\n        // variables = { conditionfilter: { 'generatedSku': filters[\"skuId\"] }, conditionImage:{...metalColors} }\r\n        \r\n \r\n    }, [])\r\n    useEffect(() => {\r\n        console.log('dataaaaaaaaa', data, Object.entries(data).length !== 0 && data.constructor === Object && data.data.allTransSkuLists && data.data.allTransSkuLists.nodes.length > 0)\r\n        if (Object.entries(data).length !== 0 && data.constructor === Object) {\r\n            if (data.data.allTransSkuLists && data.data.allTransSkuLists.nodes.length > 0) {\r\n                handleProductDetatiContext()\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n        debugger\r\n    }, [filters])\r\n    const updateProductList = () => {\r\n        console.info('filtersssss',filters)\r\n       if(Object.entries(variables).length !== 0 && variables.constructor === Object){\r\n        makeRequest(variables);\r\n       }\r\n       else{\r\n           return {}\r\n       }\r\n       \r\n        \r\n    }\r\n    console.log('datadata', data)\r\n    const handleProductDetatiContext = () => {\r\n        // filters['defaultVariants'] = {\r\n        //     ...data.allTransSkuLists.nodes[0]\r\n        // }\r\n        if(window.location.search.length>0){\r\n        let loc = window.location.search.split('=')\r\n        let productDetailProps = loc[1].split('-')\r\n        filters['productId'] = productDetailProps[0]\r\n        }\r\n        \r\n        // filters['defaultVariants']['diamondType'] = data.data.allTransSkuLists.nodes[0].diamondType\r\n        // filters['defaultVariants']['metalColor'] = data.data.allTransSkuLists.nodes[0].metalColor\r\n        // filters['defaultVariants']['purity'] = data.data.allTransSkuLists.nodes[0].purity\r\n        // filters['defaultVariants']['skuSize'] = data.data.allTransSkuLists.nodes[0].skuSize\r\n        // setFilters(filters)\r\n        var variants = filters['defaultVariants']\r\n        var metalColors =filters.defaultVariants.metalColor.length>0 ? {productColor:filters.defaultVariants.metalColor  }: null;\r\n        var ProductVariants = {conditionfilter: { 'productId': filters[\"productId\"],  ...variants  }}\r\n        var ConditionimagesMetalColor =  {conditionImage:metalColors}\r\n        variables = { ...ProductVariants,...ConditionimagesMetalColor } \r\n\r\n\r\n\r\n    }\r\n    useEffect(()=>{\r\n        if (Object.entries(data).length !== 0 && data.constructor === Object) {\r\n            if (data.data.allTransSkuLists && data.data.allTransSkuLists.nodes.length > 0) {\r\n             filters['defaultVariants']['diamondType'] = data.data.allTransSkuLists.nodes[0].diamondType\r\n        filters['defaultVariants']['metalColor'] = data.data.allTransSkuLists.nodes[0].metalColor\r\n        filters['defaultVariants']['purity'] = data.data.allTransSkuLists.nodes[0].purity\r\n        filters['defaultVariants']['skuSize'] = data.data.allTransSkuLists.nodes[0].skuSize\r\n        if(window.location.search.length===0){\r\n            filters['productId']=data.data.allTransSkuLists.nodes[0].productListByProductId.productId\r\n        }\r\n        setFilters(filters)\r\n            }}\r\n    }, [loading, error, data])\r\n    useEffect(() => {\r\n\r\n        setFilters(filters)\r\n        pathQueries()\r\n        updateProductList()\r\n\r\n    }, [filters])\r\n\r\n    const ProductDetailCtx = {\r\n        filters, loading, error, data\r\n    }\r\n\r\n    console.info('filtersssassss',filters)\r\n    return (\r\n        <ProductDetailContext.Provider value={{ ProductDetailCtx, setFilters }} >\r\n            {props.children}\r\n        </ProductDetailContext.Provider>\r\n    )\r\n};\r\nexport const ProductDetailProvider = withRouter(TabsProvider);\r\n","import { resolutions } from \"utils\";\r\n// const baseUi = \"https://assets-cdn.stylori.com/\";\r\nconst injectUrl = (url, baseUi) => url ? resolutions.map(k => ({ ...k, img: `${baseUi}${url.imageUrl===undefined  ? url : url.imageUrl}` })) : [];\r\n// const valuesinjectUrl = (imageUrl, cdnUrl) => injectUrl(imageUrl, cdnUrl);in\r\nconst placeImages = (placeImage) => placeImage.length === 0 ?'product/SR0662/SR0662-1Y.jpg' : placeImage.find(fd => !fd.ishover);\r\nconst hoverImage = (placeImage) => placeImage.length === 0 ?'product/SR0662/HOVER-SR0662-2Y.jpg' : placeImage.find(fd => fd.ishover); \r\n\r\n\r\n    export default function (data, cdnUrl) {\r\n    let mapperdata = [];\r\n    try {\r\n        mapperdata = data.data.allProductLists.nodes;\r\n    } catch (error) {\r\n        mapperdata = [];\r\n    }\r\n    const _format = mapperdata.map(k => {\r\n        let _d;\r\n        try {\r\n            _d = {\r\n                totalCount: data.data.allProductLists.length> 0 ? data.length : data.data.allProductLists.totalCount ,\r\n                price:(k.transSkuListsByProductId.nodes[0] === undefined  )? 15343 : k.transSkuListsByProductId.nodes[0].discountPrice,\r\n                offerPrice: k.transSkuListsByProductId.nodes[0] === undefined   ? 13203 : k.transSkuListsByProductId.nodes[0].markupPrice,\r\n                title: k.productName,\r\n                save: '5999.9',\r\n                image: {\r\n                    placeImage: injectUrl(placeImages(k.productImagesByProductId.nodes), cdnUrl),\r\n                    hoverImage: injectUrl(hoverImage(k.productImagesByProductId.nodes), cdnUrl),\r\n\r\n                },\r\n                productId: k.productId,\r\n                \r\n                diamondType:k.transSkuListsByProductId.nodes[0] === undefined ? '' : k.transSkuListsByProductId.nodes[0].diamondType,\r\n                metalColor:k.transSkuListsByProductId.nodes[0] === undefined ? '' : k.transSkuListsByProductId.nodes[0].metalColor,\r\n                purity:k.transSkuListsByProductId.nodes[0] === undefined ? '' : k.transSkuListsByProductId.nodes[0].purity,\r\n                skuSize:k.transSkuListsByProductId.nodes[0] === undefined ? '' : k.transSkuListsByProductId.nodes[0].skuSize,\r\n                material:k.productMaterialsByProductSku.nodes[0] === undefined ? '' : k.productMaterialsByProductSku.nodes[0].materialName,\r\n                productType:k.productType,\r\n                skuId:k.transSkuListsByProductId.nodes[0].generatedSku\r\n\r\n            }\r\n        } catch (error) {\r\n            console.info('error', error);\r\n        }\r\n\r\n        return _d;\r\n    })\r\n    // console.info('_format', _format);\r\n    return _format;\r\n\r\n\r\n}\r\n\r\n// injectUrl(\"/images/product/SE0775/SE0775-1Y.jpg\", cdnUrl)","import React from 'react';\r\nimport { NetworkContext } from '../context/NetworkContext';\r\nimport { FieldsOnCorrectType } from 'graphql/validation/rules/FieldsOnCorrectType';\r\nimport { circIn } from '@popmotion/easing';\r\nexport const useDummyRequest = (mapper) => {\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n    const [data, setData] = React.useState({});\r\n    const [mapped, setMapped] = React.useState({});\r\n    const [status, setStatus] = React.useState({ status: null, statusText: '' })\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true);\r\n        let mappeddata = {};\r\n        mapper()\r\n            .then(data => {\r\n                setMapped(data);\r\n                console.info('MAPPER', data);\r\n            })\r\n            .catch(err => setError(true));\r\n        setLoading(false);\r\n        setMapped(mappeddata);\r\n        setData(mappeddata);\r\n    }, [mapper])\r\n\r\n    return { loading, error, status, data, mapped }\r\n}\r\n\r\n// HOOK to make network request\r\nexport const useNetworkRequest = (urlSignin: string, body: string | object | null = null, mapper: ({ }) => Promise<{}> = null) => {\r\n    const { NetworkCtx: { apiUrl } } = React.useContext(NetworkContext);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n    const [data, setData] = React.useState({});\r\n    const [mapped, setMapped] = React.useState({});\r\n    const [status, setStatus] = React.useState({ status: null, statusText: '' })\r\n\r\n    // PARSE FOR NETWORK REQUEST\r\n    const method = data ? 'POST' : 'GET';\r\n    let url = `${apiUrl}${urlSignin}`\r\n    \r\n    const makeFetch = (bodyvar) => {\r\n       const bodyvariable= typeof body === \"string\" ? body : JSON.stringify(body)\r\n        body = JSON.parse(bodyvariable).length === 0? bodyvariable : JSON.stringify( bodyvar);\r\n        \r\n        // const allBody = {...body, ...bodyvar}\r\n        setLoading(true);\r\n        fetch(url, {\r\n            method, headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            }, body\r\n        })\r\n            .then(res => {\r\n                setStatus({ ...status, status: Response.status, statusText: res.message })\r\n                return res.json();\r\n            })\r\n            .then(resdata => {\r\n                setData(resdata);\r\n                console.info('resdataaaa',resdata,body)\r\n                // localStorage.setItem('response', JSON.stringify(resdata));\r\n                // var responseId = localStorage.getItem(\"response\") ? localStorage.getItem(\"response\") : {}\r\n                // var user_id = JSON.parse(responseId).user.id ? JSON.parse(responseId).user.id : {}\r\n                // var cart = localStorage.getItem(\"cartDetails\") ? localStorage.getItem(\"cartDetails\") : {};\r\n                // var addtocart = JSON.parse(cart).products ? JSON.parse(cart).products : {}\r\n                // var values = ({ user_id, addtocart })\r\n                // let urladdcart = `${apiUrl}${'/addtocart'}`\r\n                // fetch('http://auth-dev.ap-south-1.elasticbeanstalk.com/addtocart', {\r\n                //     method: 'POST',\r\n                //     headers: {\r\n                //         'Content-Type': 'application/json'\r\n                //     },\r\n                //     body: JSON.stringify(values)\r\n                // }).then(values => {\r\n                //     localStorage.setItem('addtocart', JSON.stringify(values));\r\n                //     console.log('resdata', values)\r\n                // }).catch((error) => {\r\n                //     console.error(error);\r\n                //     console.log('resdata', error)\r\n                // });\r\n            })\r\n            .catch(err => {\r\n                setError(true);\r\n                setLoading(false);\r\n                console.log(Response.status)\r\n            });\r\n    }\r\n    console.info('object', data)\r\n    React.useEffect(() => {\r\n        makeFetch();\r\n    }, []);\r\n    return { loading, error, status, data, mapped, makeFetch }\r\n}","import React from 'react';\r\nimport './screens.css'\r\n\r\nexport const Loading = (\r\n    <div className=\"overall-loader\">\r\n        <div id=\"loading\"></div>\r\n    </div>\r\n)\r\n\r\nexport default Loading;","import React, { useEffect } from 'react';\r\nimport { useGraphql } from 'hooks/GraphqlHook';\r\nimport { CART } from 'queries/cart';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { productsPendants } from 'mappers/dummydata';\r\n// import { object } from 'prop-types';\r\n\r\n// let setFilter;\r\nconst initialCtx = {\r\n    CartCtx: {\r\n        cartFilters: {\r\n           skuId:''\r\n        },\r\n        loading: false, error: false, data: []\r\n    },\r\n    setCartFilters: (filterData) => { }\r\n}\r\n\r\nexport const CartContext = React.createContext(initialCtx);\r\nexport const CartConsumer = CartContext.Consumer;\r\n\r\nconst Provider = (props) => {\r\n    const [cartFilters, setCartFilters] = React.useState(initialCtx.CartCtx);\r\n\r\n\r\n\r\n    var skuId;\r\n    var skus;\r\n    const pathQueries = () => {\r\n    skuId = localStorage.getItem('cartDetails')\r\n    var id = JSON.parse(skuId);\r\n     skus = id.products[0].sku_id;\r\n    // alert(skuId)\r\n    }\r\n    skuId = localStorage.getItem('cartDetails')\r\n    var id = JSON.parse(skuId);\r\n     skus = id.products[0].sku_id[0];\r\n\r\n    const { loading, error, data, makeRequest } = useGraphql(CART, () => { }, {});\r\n\r\n    const updateProductList = () => {\r\n        const variables = {\"productList\":[skus]};\r\n        makeRequest(variables);\r\n    }\r\n    useEffect(() => {\r\n        pathQueries();\r\n        setCartFilters(skus)\r\n        updateProductList();\r\n        console.log('cartFilters',cartFilters)\r\n    }, [cartFilters])\r\n    \r\n\r\n    // console.log('variables', variables);\r\n    // const { loading, error, data } = useGraphql(CART, () => { }, variables);\r\n    const CartCtx = {\r\n        cartFilters, loading, error, data, setCartFilters\r\n    }\r\n\r\n\r\n    return (\r\n        <CartContext.Provider value={{ CartCtx, setCartFilters }} >\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n};\r\n\r\nexport const CartProvider = withRouter(Provider);","export const CART = `query MyQuery($productList: [String!]) {\r\n    allProductLists(filter: {transSkuListsByProductId: {some: {generatedSku: {in: $productList}}}}) {\r\n      nodes {\r\n        productName\r\n        productId\r\n        transSkuListsByProductId {\r\n          nodes {\r\n            generatedSku\r\n            purity\r\n            metalColor\r\n            discountPrice\r\n            markupPrice\r\n          }\r\n        }\r\n        productImagesByProductId {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`","import { filterGenerator } from \"utils\";\r\n// SR3261\r\nexport const PRODUCTDETAILS = `query MyQuery($conditionfilter: TransSkuListCondition, $conditionImage: ProductImageCondition,$productnamefilter:TransSkuListFilter,$number: Int) {\r\n  allTransSkuLists(condition: $conditionfilter, filter:$productnamefilter, first: $number) {\r\n    nodes {\r\n      skuSize\r\n      markupPrice\r\n      sellingPrice\r\n      purity\r\n      metalColor\r\n      discountPrice\r\n      generatedSku\r\n      transSkuDescriptionsBySkuId {\r\n        nodes {\r\n          skuDescription\r\n        }\r\n      }\r\n      diamondType\r\n      productListByProductId{\r\n           productName\r\n      productId\r\n      defaultSize\r\n      sizeVarient\r\n      colourVarient\r\n      defaultWeight\r\n      productType\r\n             productDiamondsByProductSku {\r\n        nodes {\r\n          diamondClarity\r\n          diamondColour\r\n          diamondType\r\n          stoneWeight\r\n          diamondShape\r\n          diamondSettings\r\n          stoneCount\r\n        }\r\n      }\r\n         productGemstonesByProductSku {\r\n        nodes {\r\n          gemstoneType\r\n          gemstoneSize\r\n          gemstoneShape\r\n          gemstoneSetting\r\n          productSku\r\n          stoneCount\r\n        }\r\n      }\r\n           productImagesByProductId (condition:$conditionImage,orderBy: IMAGE_POSITION_ASC) {\r\n        nodes {\r\n          ishover\r\n          imageUrl\r\n          imagePosition\r\n        }\r\n      }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`\r\nexport const filterProductMatrix = (type, value) => {\r\n  let fc = { table: \"\", type: \"\" }\r\n  switch (type) {\r\n    case \"productId\": {\r\n      fc = {\r\n        table: \"\",\r\n        type: \"productId\"\r\n      }\r\n      break;\r\n    }\r\n    case \"sizeVarient\": {\r\n      fc = {\r\n        table: \"\",\r\n        type: \"sizeVarient\"\r\n      }\r\n      break;\r\n    }\r\n    case \"metalColor\": {\r\n      fc = {\r\n        table: \"transSkuListsByProductId\",\r\n        type: \"metalColor\"\r\n      }\r\n      break;\r\n    }\r\n    case \"diamondType\": {\r\n      fc = {\r\n        table: \"productDiamondsByProductSku\",\r\n        type: \"diamondType\"\r\n      }\r\n      break;\r\n    }\r\n\r\n\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return filterGenerator(fc.type, value, fc.table);\r\n}\r\n\r\nexport const conditions = {\r\n  productId: (id) => ({\r\n    \"condition\": {\r\n      \"productId\": id\r\n    }\r\n  }),\r\n\r\n\r\n  generateFilters: (filters) => {\r\n    let filter = {};\r\n    const filterKeys = filters.map(val => val);\r\n\r\n    filterKeys.map(k => {\r\n      const fk = String(Object.keys(k));\r\n      const fval = String(Object.values(k));\r\n      const fquery = filterProductMatrix(fk, fval);\r\n      filter = { ...filter, ...fquery };\r\n    })\r\n\r\n    if (Object.keys(filter).length > 0) {\r\n      return { filter };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { NetworkProvider, GlobalProvider } from 'context';\r\nimport './index.css'\r\nimport Loading from 'screens/Loading';\r\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nlet outerTheme = createMuiTheme(require('./theme.json'));\r\nlet outerThemes = responsiveFontSizes(outerTheme);\r\nconst RouterApp = React.lazy(() => import('router'));  \r\n\r\n\r\n// const client = new ApolloClient({\r\n//   uri: ``,\r\n// });\r\n\r\n\r\n\r\nfunction App(props) {\r\n\r\n\r\n  // const productId = props.location.state.data\r\n\r\n  return (\r\n    // <ApolloProvider client={client}>\r\n    <GlobalProvider>\r\n      <ThemeProvider theme={outerThemes}>\r\n        <NetworkProvider>\r\n           {/*productId=\"SP1135\" <ProductDetailProvider productId=\"SP1135\">*/ }\r\n          <Router>\r\n            <React.Suspense fallback={Loading} >\r\n              <RouterApp />\r\n            </React.Suspense>\r\n          </Router>\r\n          {/* </ProductDetailProvider> */}\r\n        </NetworkProvider>\r\n      </ThemeProvider>\r\n    </GlobalProvider>\r\n    // </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport async function register(config) {\r\n  await requestNotificationPermission();\r\n\r\n  if (process.env.NODE_ENV !== 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        sendNotification('App is being cached localyy for offline purpose!')\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = async () => {\r\n          if (installingWorker.state === 'installed') {\r\n            let updating = false, \r\n              updateMessage='New version of app is installed',\r\n              installedMessage = 'Your app is installed and works offline'\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n                updating=true\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                //Display Notification\r\n                await sendNotification(updating ? updateMessage : installedMessage);\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nasync function requestNotificationPermission(){\r\n  if(!check()) return false;\r\n  const permission = await window.Notification.requestPermission();\r\n  if(permission !== 'granted'){} //alert('Enable notifications to have great experience!');\r\n  else {\r\n    if(!localStorage.getItem('firstnotify')){\r\n      await sendNotification('Ohoo.. your first notification 🎉🙌');\r\n      localStorage.setItem('firstnotify',true);\r\n    }\r\n    return true;\r\n  };\r\n}\r\n\r\nfunction check(){\r\n\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.log('Sorry notifications are not yet supported');//alert\r\n    return false;\r\n  }\r\n  if (!('PushManager' in window)) {\r\n    console.log('Sorry notifications are not yet supported');//alert\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nasync function sendNotification(message){\r\n  check() ? await new Notification(message) : await requestNotificationPermission();\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\nwindow.addEventListener('online',e => {\r\n  sendNotification('Lost internet connection !')\r\n})\r\n\r\nwindow.addEventListener('offline',e => {\r\n  sendNotification('Network connection restored !')\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}