{"version":3,"sources":["config.js","hooks/GraphqlHook.js","utils/index.js","context/NetworkContext.js","context/GlobalContext.js","queries/productListing.js","context/FilterOptionsContext.js","context/index.js","mappers/productlist.js","context/ProductDetailContext.js","screens/Loading.js","context/CartContext.js","queries/cart.js","queries/productdetail.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","API_URL","HOME_PAGE_URL","CDN_URL","useGraphql","query","mapper","variables","arguments","length","undefined","initRequest","_React$useState","React","useState","_React$useState2","Object","D_NAC_nac_ecom_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","loading","setLoading","_React$useState3","_React$useState4","error","setError","_React$useState5","_React$useState6","data","setData","_React$useState7","_React$useState8","mappedData","setMappedData","_React$useContext$Net","useContext","NetworkContext","NetworkCtx","uri","graphqlUrl","cdnUrl","client","createApolloFetch","makeRequest","reqvars","D_NAC_nac_ecom_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","then","resdata","mapped","console","catch","err","useEffect","resolutions","res","size","filterGenerator","type","value","table","clause","D_NAC_nac_ecom_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","some","initialCtx","apiUrl","token","homePage","concat","LoginCtx","email","password","setNetworkCtx","createContext","NetworkProvider","Consumer","props","D_NAC_nac_ecom_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Provider","children","GLobalCtx","loggedIn","setGlobaCtx","GlobalContext","GlobalProvider","slicedToArray","Globalctx","setGlobalCtx","react_default","conditions","filters","filter","map","val","String","keys","k","fquery","fc","filterProductMatrix","values","objectSpread","FilterOptionsContext","FilterOptionsCtx","Offers","Availability","ProductType","style","material","Theme","Collection","metalColor","MetalPurity","Occasion","NoOfStones","Gender","stoneColor","stoneShape","offset","dataArr","first","setFilters","filterData","setOffset","setFirst","updateProductList","FilterOptionsProvider","withRouter","setDataArr","_React$useState9","filterLogic","_React$useState10","setFilterLogic","t","toConsumableArray","queries","_useGraphql","conditionFilters","paramsAo","window","location","search","decodeURI","replace","split","splitval","defineProperty","log","paramObjects","offsetvar","firstvar","info","fk","fv","qt","push","encodeURI","join","history","pathname","pathQueries","productlist","newUpdatedList","GlobalContext_GlobalProvider","ProductDetailContext","CartContext","injectUrl","url","baseUi","img","imageUrl","hoverImage","placeImage","find","fd","ishover","mapperdata","allProductLists","nodes","_d","totalCount","price","transSkuListsByProductId","discountPrice","offerPrice","markupPrice","title","productName","save","image","productImagesByProductId","productId","diamondType","purity","skuSize","ProductDetailCtx","defaultVariants","ProductDetailProvider","productDetailProps","state","defaultVariant","PRODUCTDETAILS","conditionfilter","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Loading","className","id","CartCtx","cartFilters","skuId","setCartFilters","CartProvider","skus","localStorage","getItem","JSON","parse","products","sku_id","productList","outerTheme","createMuiTheme","require","outerThemes","responsiveFontSizes","RouterApp","lazy","Promise","all","e","bind","App","context","ThemeProvider","theme","react_router_dom","Suspense","fallback","isLocalhost","Boolean","hostname","match","_callee2","config","regenerator_default","wrap","_context2","prev","next","requestNotificationPermission","addEventListener","swUrl","process","checkValidServiceWorker","navigator","serviceWorker","ready","registerValidSW","stop","register","registration","onupdatefound","installingWorker","installing","sendNotification","onstatechange","asyncToGenerator","mark","_callee","updating","updateMessage","installedMessage","_context","controller","onUpdate","onSuccess","_callee3","_context3","check","abrupt","Notification","requestPermission","sent","setItem","_callee4","message","_context4","fetch","response","contentType","headers","get","status","indexOf","unregister","reload","ReactDOM","render","src_App","document","getElementById","_x","_register","apply","this"],"mappings":"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","file":"static/js/main.4af9ed90.chunk.js","sourcesContent":["export const API_URL = \"https://api.stylori.net\"\r\nexport const HOME_PAGE_URL = \"\"\r\nexport const CDN_URL = \"https://assets.stylori.net/base_images/\"","import React from 'react';\r\nimport { createApolloFetch } from 'apollo-fetch';\r\nimport { NetworkContext } from 'context/NetworkContext';\r\n\r\nexport const useGraphql = (query, mapper, variables = {}, initRequest = false) => {\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = React.useState(false);\r\n    const [data, setData] = React.useState({});\r\n    const [mappedData, setMappedData] = React.useState({});\r\n    const { NetworkCtx: { graphqlUrl: uri, cdnUrl } } = React.useContext(NetworkContext);\r\n    const client = createApolloFetch({ uri });\r\n\r\n    const makeRequest = (reqvars) => {\r\n       \r\n        client({ query, variables: { ...variables, ...reqvars } }).then(resdata => {\r\n            setLoading(false);\r\n            setError(false);\r\n            setData(resdata);\r\n            if (mapper && data) {\r\n                try {\r\n                    let mapped = mapper(data,cdnUrl);\r\n                    setMappedData(mapped);\r\n                } catch (error) {\r\n                    console.error('MAPPER ERROR', error);\r\n                    setError(true);\r\n                    setMappedData({});\r\n                }\r\n            }\r\n\r\n        }).catch(err => {\r\n            setLoading(false);\r\n            setError(true);\r\n            setData([]);\r\n            setMappedData([]);\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(initRequest) makeRequest();\r\n    }, []);\r\nreturn { error, loading, data, mappedData, makeRequest }\r\n}","export const resolutions = [\r\n  { res: '318x318', size: '375w' },\r\n  { res: '372x372', size: '500w' },\r\n  { res: '276x276', size: '1440w' },\r\n  { res: '422x422', size: '600w' },\r\n  { res: '247x247', size: '768w' },\r\n  { res: '204x204', size: '1024w' },\r\n  { res: '543x543', size: '2560w' },\r\n]\r\n\r\n\r\n// export const detailFilterGen = (type, value, table, clause = \"equalTo\") => {\r\n//   if (type === 'productId') {\r\n//     return {\r\n//       [type]: {\r\n//         [clause]: value\r\n//       }\r\n//     }\r\n//   }\r\n//   else {\r\n    \r\n//       let values = {};\r\n//   // Object.keys(kv).map(k => {\r\n//     values[type] = { [clause]: value } \r\n//   // });\r\n// console.log(values)\r\n//   return values;\r\n//   }\r\n// }\r\n\r\nexport const filterGenerator = (type, value, table, clause = \"equalTo\") => {\r\n  if (table.length > 0) {\r\n    return {\r\n      [table]: {\r\n        some: {\r\n          [type]: {\r\n            [clause]: value\r\n          },\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n  else {\r\n    return {\r\n      [type]: {\r\n        [clause]: value\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { API_URL, HOME_PAGE_URL , CDN_URL} from '../config';\r\n\r\nconst initialCtx = {\r\n    NetworkCtx: {\r\n        apiUrl: API_URL, token: null, homePage: HOME_PAGE_URL, graphqlUrl: `${API_URL}/graphql`, cdnUrl: CDN_URL, LoginCtx:{email:'',password:''}\r\n    },\r\n    \r\n    setNetworkCtx: () => null\r\n}\r\n\r\nexport const NetworkContext = React.createContext(initialCtx);\r\n\r\nexport const NetworkConsumer = NetworkContext.Consumer;\r\n\r\nexport const NetworkProvider = (props) => {\r\n\r\n    const [NetworkCtx, setNetworkCtx] = React.useState(initialCtx.NetworkCtx);\r\n\r\n    return (\r\n        <NetworkContext.Provider value={{ NetworkCtx, setNetworkCtx }} >\r\n            {props.children}\r\n        </NetworkContext.Provider>\r\n    )\r\n};","import React from 'react';\r\n\r\nconst initialCtx = {\r\n    GLobalCtx: {\r\n        loggedIn: false,\r\n    },\r\n\r\n    setGlobaCtx: () => null\r\n}\r\n\r\n\r\nexport const GlobalContext = React.createContext(initialCtx);\r\n\r\nexport const GlobalConsumer = GlobalContext.Consumer;\r\n\r\nexport const GlobalProvider = (props) => {\r\n\r\n    const [Globalctx, setGlobalCtx] = React.useState(initialCtx.GLobalCtx);\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ Globalctx, setGlobalCtx }} >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import { filterGenerator } from \"utils\";\r\n\r\nexport const PRODUCTLIST = `query fetchProductDetails($filter: ProductListFilter,$offsetvar:Int,$firstvar:Int) {\r\n  allProductLists(filter: $filter,offset: $offsetvar, first:$firstvar,condition: {isactive: true} ) {\r\n    totalCount\r\n    nodes {\r\n      productName\r\n      productId\r\n      defaultSize\r\n      sizeVarient\r\n      productType\r\n      productDiamondsByProductSku {\r\n        nodes {\r\n          diamondClarity\r\n          diamondColour\r\n          diamondType\r\n          stoneWeight\r\n          diamondShape\r\n          diamondSettings\r\n          stoneCount\r\n        }\r\n      }\r\n      transSkuListsByProductId (condition: {isdefault: true}) {\r\n        nodes {\r\n          skuSize\r\n          purity\r\n          diamondType\r\n          metalColor\r\n          markupPrice\r\n          sellingPrice\r\n          discountPrice\r\n          generatedSku\r\n        }\r\n      }\r\n      productImagesByProductId {\r\n        nodes {\r\n          ishover\r\n          imageUrl\r\n          imagePosition\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\nexport const filterProductMatrix = (type, value) => {\r\n  let fc = { table: \"\", type: \"\" }\r\n  switch (type) {\r\n    case \"Collection\": {\r\n      fc = {\r\n        table: \"productCollectionsByProductId\",\r\n        type: \"collectionName\"\r\n      }\r\n      break;\r\n    }\r\n    case \"Occasion\": {\r\n      fc = {\r\n        table: \"productOccassionsByProductId\",\r\n        type: \"occassionName\"\r\n      }\r\n      break;\r\n    }\r\n    case \"Theme\": {\r\n      fc = {\r\n        table: \"productThemesByProductId\",\r\n        type: \"themeName\"\r\n      }\r\n      break;\r\n    }\r\n    case \"Style\": {\r\n      fc = {\r\n        table: \"productStylesByProductId\",\r\n        type: \"styleName\"\r\n      }\r\n      break;\r\n    }\r\n    case \"ProductType\": {\r\n      fc = {\r\n        table: \"\",\r\n        type: \"productType\"\r\n      }\r\n      break;\r\n    }\r\n    case \"MetalColor\": {\r\n      fc = {\r\n        table: \"transSkuListsByProductId\",\r\n        type: \"metalColor\"\r\n      }\r\n      break;\r\n    }\r\n    case \"MetalPurity\": {\r\n      fc = {\r\n        table: \"transSkuListsByProductId\",\r\n        type: \"purity\"\r\n      }\r\n      break;\r\n    }\r\n    case \"Gender\": {\r\n      fc = {\r\n        table: \"\",\r\n        type: \"gender\"\r\n      }\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return filterGenerator(fc.type, value, fc.table);\r\n}\r\n\r\n\r\n\r\nexport const conditions = {\r\n  productId: (id) => ({\r\n    \"condition\": {\r\n      \"productId\": id,\r\n\r\n    }\r\n  }),\r\n  generateFilters: (filters) => {\r\n    let filter = {};\r\n    const filterKeys = filters.map(val => String(Object.keys(val)));\r\n\r\n    filters.map(k => {\r\n      const fkey = String(Object.keys(k));\r\n      const fval = String(Object.values(k));\r\n      const fquery = filterProductMatrix(fkey, fval);\r\n      filter = { ...filter, ...fquery };\r\n    })\r\n\r\n    if (Object.keys(filter).length > 0) {\r\n      return { filter };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}","import React, { useEffect } from 'react';\r\nimport { useGraphql } from 'hooks/GraphqlHook';\r\nimport { PRODUCTLIST, conditions } from 'queries/productListing';\r\nimport { withRouter } from 'react-router-dom';\r\nimport productlist from 'mappers/productlist';\r\nimport { CDN_URL } from 'config';\r\n// import { productsPendants } from 'mappers/dummydata';\r\n// import { object } from 'prop-types';\r\n\r\n// let setFilter;\r\nconst initialCtx = {\r\n    FilterOptionsCtx: {\r\n        filters: {\r\n            Offers: null, Availability: null, ProductType: null, style: null, material: null, Theme: null, Collection: null, metalColor: null,\r\n            MetalPurity: null, Occasion: null, NoOfStones: null, Gender: null, stoneColor: null, stoneShape: null\r\n        },\r\n        loading: false, error: false, data: [], offset: 0, dataArr: [], first: 24\r\n    },\r\n    setFilters: (filterData) => { },\r\n    setOffset: () => { },\r\n    setFirst: () => { },\r\n    updateProductList: () => { },\r\n}\r\n\r\nexport const FilterOptionsContext = React.createContext(initialCtx);\r\nexport const FilterOptionsConsumer = FilterOptionsContext.Consumer;\r\n\r\nconst Provider = (props) => {\r\n    const [filters, setFilters] = React.useState({\r\n        Offers: {}, Availability: {}, ProductType: {}, style: {}, material: {}, Theme: {}, Collection: {}, metalColor: {},\r\n        MetalPurity: {}, Occasion: {}, NoOfStones: {}, Gender: {}, stoneColor: {}, stoneShape: {}\r\n    });\r\n    const [offset, setOffset] = React.useState(0)\r\n    const [first, setFirst] = React.useState(24)\r\n    const [dataArr, setDataArr] = React.useState([])\r\n    const [ { filterLogic }, setFilterLogic ] = React.useState({ filterLogic: () => [] });\r\n\r\n    useEffect(() => { setFilterLogic({ filterLogic: (d, t) => t }) },[ filters ])\r\n    useEffect(() => { setFilterLogic({ filterLogic: (d,t) => [...d,...t] }) },[ offset ])\r\n\r\n    var queries = []\r\n    const pathQueries = () => {\r\n        // var queries = []\r\n        Object.keys(filters).map(fk => {\r\n            const filter = filters[fk];\r\n            const fv = Object.keys(filter);\r\n            if (fv.length > 0) {\r\n                if (filter[fv[0]]) {\r\n                    const qt = `${fk}=${fv[0]}`;\r\n                    queries.push(qt);\r\n                }\r\n\r\n            }\r\n        })\r\n        const query = encodeURI(queries.join(\"&\"));\r\n        props.history.push({\r\n            pathname: '/stylori',\r\n            search: query !== '' ? query : window.location.search,\r\n        })\r\n    }\r\n\r\n    const paramObjects = () => {\r\n        // Destructuring the query parameters from the URL\r\n        let paramsAo = [];\r\n        if (window.location.search) {\r\n            let urlSearchparamsDecode = decodeURI(window.location.search);\r\n            let urlParams = urlSearchparamsDecode.replace('?', '').split('&');\r\n            let urlSplitparamsEqual = urlParams.map(val => {\r\n                let splitval = val.split('=');\r\n                return { [splitval[0]]: splitval[1] }\r\n            })\r\n            paramsAo = urlSplitparamsEqual;\r\n            console.log('val', paramsAo)\r\n        }\r\n        return paramsAo;\r\n    }\r\n\r\n    const { loading, error, data, makeRequest } = useGraphql(PRODUCTLIST, () => { }, {});\r\n    const a = [];\r\n    const updateProductList = () => {\r\n        const conditionFilters = conditions.generateFilters(paramObjects())\r\n        const variables = { ...conditionFilters, 'offsetvar': offset, 'firstvar': first }\r\n        makeRequest(variables)\r\n    }\r\n\r\n    useEffect(() => console.info('FILTERS', filters), [filters]);\r\n\r\n    useEffect(() => {\r\n        pathQueries();\r\n        updateProductList();\r\n    }, [filters, offset])\r\n\r\n    useEffect(() => {\r\n        // const mapped = productlist(data, CDN_URL);\r\n        // console.log('dataArr',dataArr)\r\n        // const newUpdatedList = [...dataArr, ...mapped];\r\n        // console.info('LISTUPDATE', a, data, mapped, newUpdatedList, dataArr)\r\n        // setDataArr(newUpdatedList);\r\n  \r\n        if(window.location.search !== ''){\r\n            const mapped = productlist(data, CDN_URL);\r\n            console.log('dataArr',dataArr)\r\n            // const newUpdatedList = [...dataArr, ...mapped];\r\n            const newUpdatedList = filterLogic(dataArr, mapped);\r\n            console.info('PROPERDATA',newUpdatedList)\r\n            console.info('LISTUPDATE', a, data, mapped, newUpdatedList, dataArr)\r\n            setDataArr(newUpdatedList);   \r\n        }\r\n      \r\n    }, [data]);\r\n\r\n    useEffect(()=>{\r\n        if(window.location.search === ''){\r\n            setDataArr([])\r\n            const mapped = productlist(data, CDN_URL);\r\n            const newUpdatedList = [...dataArr, ...mapped];\r\n            console.info('LISTUPDATE', a, data, mapped, newUpdatedList, dataArr)\r\n            setDataArr(newUpdatedList);   \r\n        }\r\n    },[ data ])\r\n\r\n    useEffect(() => console.info('DATAARRA', dataArr), [dataArr])\r\n\r\n    const FilterOptionsCtx = {\r\n        filters, loading, error, data, setFilters, offset, setOffset, dataArr, first, setFirst\r\n    }\r\n\r\n    return (\r\n        <FilterOptionsContext.Provider value={{ FilterOptionsCtx, setFilters, setOffset, setFirst, updateProductList }} >\r\n            {props.children}\r\n        </FilterOptionsContext.Provider>\r\n    )\r\n};\r\n\r\nexport const FilterOptionsProvider = withRouter(Provider);","export * from './GlobalContext';\r\nexport * from './NetworkContext';\r\nexport * from './ProductDetailContext';\r\nexport * from './FilterOptionsContext';\r\nexport * from './CartContext';","import { resolutions } from \"utils\";\r\n// const baseUi = \"https://assets-cdn.stylori.com/\";\r\nconst injectUrl = (url, baseUi) => url ? resolutions.map(k => ({ ...k, img: `${baseUi}${url.imageUrl===undefined  ? url : url.imageUrl}` })) : [];\r\n// const valuesinjectUrl = (imageUrl, cdnUrl) => injectUrl(imageUrl, cdnUrl);in\r\nconst placeImages = (placeImage) => placeImage.length === 0 ?'product/SR0662/SR0662-1Y.jpg' : placeImage.find(fd => !fd.ishover);\r\nconst hoverImage = (placeImage) => placeImage.length === 0 ?'product/SR0662/HOVER-SR0662-2Y.jpg' : placeImage.find(fd => fd.ishover); \r\n\r\n\r\nexport default function (data, cdnUrl) {\r\n    debugger\r\n    let mapperdata = [];\r\n    try {\r\n        mapperdata = data.data.allProductLists.nodes;\r\n    } catch (error) {\r\n        mapperdata = [];\r\n    }\r\n    const _format = mapperdata.map(k => {\r\n        \r\n        let _d;\r\n        try {\r\n            _d = {\r\n                totalCount: data.data.allProductLists.length> 0 ? data.length : data.data.allProductLists.totalCount ,\r\n                price:(k.transSkuListsByProductId.nodes[0] === undefined  )? 15343 : k.transSkuListsByProductId.nodes[0].discountPrice,\r\n                offerPrice: k.transSkuListsByProductId.nodes[0] === undefined   ? 13203 : k.transSkuListsByProductId.nodes[0].markupPrice,\r\n                title: k.productName,\r\n                save: '5999.9',\r\n                image: {\r\n                    placeImage: injectUrl(placeImages(k.productImagesByProductId.nodes), cdnUrl),\r\n                    hoverImage: injectUrl(hoverImage(k.productImagesByProductId.nodes), cdnUrl),\r\n\r\n                },\r\n                productId: k.productId,\r\n                \r\n                diamondType:k.transSkuListsByProductId.nodes[0] === undefined ? '' : k.transSkuListsByProductId.nodes[0].diamondType,\r\n                metalColor:k.transSkuListsByProductId.nodes[0] === undefined ? '' : k.transSkuListsByProductId.nodes[0].metalColor,\r\n                purity:k.transSkuListsByProductId.nodes[0] === undefined ? '' : k.transSkuListsByProductId.nodes[0].purity,\r\n                skuSize:k.transSkuListsByProductId.nodes[0] === undefined ? '' : k.transSkuListsByProductId.nodes[0].skuSize,\r\n\r\n            }\r\n        } catch (error) {\r\n            console.info('error', error);\r\n        }\r\n\r\n        return _d;\r\n    })\r\n    // console.info('_format', _format);\r\n    return _format;\r\n\r\n\r\n}\r\n\r\n// injectUrl(\"/images/product/SE0775/SE0775-1Y.jpg\", cdnUrl)","import React, { useEffect } from 'react';\r\nimport { useGraphql } from 'hooks/GraphqlHook';\r\nimport { PRODUCTDETAILS, conditions } from 'queries/productdetail';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst initialCtx = {\r\n    ProductDetailCtx: {\r\n\r\n        filters: { productId: '', defaultVariants: { diamondType: '', metalColor: '', purity: ''} },\r\n        loading: false, error: false, data: []\r\n    },\r\n    setFilters: () => { }\r\n}\r\n\r\nexport const ProductDetailContext = React.createContext(initialCtx);\r\n\r\nexport const ProductDetailConsumer = ProductDetailContext.Consumer;\r\n\r\nexport const TabsProvider = (props) => {\r\n    const [filters, setFilters] = React.useState(initialCtx.ProductDetailCtx.filters);\r\n\r\n    let queries = [];\r\n    const pathQueries = () => {\r\n\r\n\r\n        setFilters(filters)\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        let a = props;\r\n\r\n        pathQueries()\r\n    }, [filters])\r\n\r\n\r\n    if (filters.productId === \"\") {\r\n        let productDetailProps = props.location.state;\r\n        let productId = productDetailProps.productId;\r\n        let defaultVariants = productDetailProps.defaultVariant;\r\n        filters['productId'] = productId;\r\n        filters['defaultVariants'] = defaultVariants\r\n    }\r\n\r\n\r\n    \r\n    // {\r\n    //     \"conditionfilter\": {\"diamondType\": \"SI GH\",\"purity\":\"18K\",\"metalColor\": \"White\" },\r\n    //     \"filter\": {\"productId\": \"SB0010\"}\r\n    //   }\r\n    // const { loading, error, data } = useGraphql(PRODUCTDETAILS, () => { }, variables);\r\n    const { loading, error, data, makeRequest } = useGraphql(PRODUCTDETAILS, () => { }, {});\r\n    const updateProductList = () => {\r\n        const variables = { 'conditionfilter': filters.defaultVariants, 'filter': { \"productId\": filters.productId } }\r\n        makeRequest(variables);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setFilters(filters)\r\n        pathQueries()\r\n        updateProductList()\r\n    }, [filters])\r\n    const ProductDetailCtx = {\r\n        filters, loading, error, data\r\n    }\r\n\r\n\r\n    return (\r\n        <ProductDetailContext.Provider value={{ ProductDetailCtx, setFilters }} >\r\n            {props.children}\r\n        </ProductDetailContext.Provider>\r\n    )\r\n};\r\nexport const ProductDetailProvider = withRouter(TabsProvider);\r\n","import React from 'react';\r\nimport './screens.css'\r\n\r\nexport const Loading = (\r\n    <div className=\"overall-loader\">\r\n        <div id=\"loading\"></div>\r\n    </div>\r\n)\r\n\r\nexport default Loading;","import React, { useEffect } from 'react';\r\nimport { useGraphql } from 'hooks/GraphqlHook';\r\nimport { CART } from 'queries/cart';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { productsPendants } from 'mappers/dummydata';\r\n// import { object } from 'prop-types';\r\n\r\n// let setFilter;\r\nconst initialCtx = {\r\n    CartCtx: {\r\n        cartFilters: {\r\n           skuId:''\r\n        },\r\n        loading: false, error: false, data: []\r\n    },\r\n    setCartFilters: (filterData) => { }\r\n}\r\n\r\nexport const CartContext = React.createContext(initialCtx);\r\nexport const CartConsumer = CartContext.Consumer;\r\n\r\nconst Provider = (props) => {\r\n    const [cartFilters, setCartFilters] = React.useState(initialCtx.CartCtx);\r\n\r\n\r\n\r\n    var skuId;\r\n    var skus;\r\n    const pathQueries = () => {\r\n    skuId = localStorage.getItem('cartDetails')\r\n    var id = JSON.parse(skuId);\r\n     skus = id.products[0].sku_id[0];\r\n    // alert(skuId)\r\n    }\r\n    skuId = localStorage.getItem('cartDetails')\r\n    var id = JSON.parse(skuId);\r\n     skus = id.products[0].sku_id[0];\r\n\r\n    const { loading, error, data, makeRequest } = useGraphql(CART, () => { }, {});\r\n\r\n    const updateProductList = () => {\r\n        const variables = {\"productList\":[skus]};\r\n        makeRequest(variables);\r\n    }\r\n    useEffect(() => {\r\n        pathQueries();\r\n        setCartFilters(skus)\r\n        updateProductList();\r\n        console.log('cartFilters',cartFilters)\r\n    }, [cartFilters])\r\n    \r\n\r\n    // console.log('variables', variables);\r\n    // const { loading, error, data } = useGraphql(CART, () => { }, variables);\r\n    const CartCtx = {\r\n        cartFilters, loading, error, data, setCartFilters\r\n    }\r\n\r\n\r\n    return (\r\n        <CartContext.Provider value={{ CartCtx, setCartFilters }} >\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n};\r\n\r\nexport const CartProvider = withRouter(Provider);","export const CART = `query MyQuery($productList: [String!]) {\r\n    allProductLists(filter: {transSkuListsByProductId: {some: {generatedSku: {in: $productList}}}}) {\r\n      nodes {\r\n        productName\r\n        productId\r\n        transSkuListsByProductId {\r\n          nodes {\r\n            generatedSku\r\n            purity\r\n            metalColor\r\n            discountPrice\r\n            markupPrice\r\n          }\r\n        }\r\n        productImagesByProductId {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`","import { filterGenerator } from \"utils\";\r\n// SR3261\r\nexport const PRODUCTDETAILS = `query fetchProductDetails($conditionfilter:TransSkuListCondition,$filter: ProductListCondition) {\r\n  allProductLists(condition:$filter ) {\r\n    nodes {\r\n      productName\r\n      productId\r\n      defaultSize\r\n      sizeVarient\r\n      colourVarient\r\n      defaultWeight\r\n      productType\r\n      productImagesByProductId  {\r\n        nodes {\r\n          ishover\r\n          imageUrl\r\n          imagePosition\r\n        }\r\n      }\r\n      productDiamondsByProductSku {\r\n        nodes {\r\n          diamondClarity\r\n          diamondColour\r\n          diamondType\r\n          stoneWeight\r\n          diamondShape\r\n          diamondSettings\r\n          stoneCount\r\n        }\r\n      }\r\n      transSkuListsByProductId (condition:$conditionfilter ) {\r\n        nodes {\r\n          skuSize\r\n          markupPrice\r\n          sellingPrice\r\n          purity\r\n          metalColor\r\n          discountPrice\r\n          generatedSku\r\n          transSkuDescriptionsBySkuId {\r\n            nodes {\r\n              skuDescription\r\n            }\r\n          }\r\n          diamondType\r\n        }\r\n      }\r\n      productGemstonesByProductSku {\r\n        nodes {\r\n          gemstoneType\r\n          gemstoneSize\r\n          gemstoneShape\r\n          gemstoneSetting\r\n          productSku\r\n          stoneCount\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\nexport const filterProductMatrix = (type, value) => {\r\n  let fc = { table: \"\", type: \"\" }\r\n  switch (type) {\r\n    case \"productId\": {\r\n      fc = {\r\n        table: \"\",\r\n        type: \"productId\"\r\n      }\r\n      break;\r\n    }\r\n    case \"sizeVarient\": {\r\n      fc = {\r\n        table: \"\",\r\n        type: \"sizeVarient\"\r\n      }\r\n      break;\r\n    }\r\n    case \"metalColor\": {\r\n      fc = {\r\n        table: \"transSkuListsByProductId\",\r\n        type: \"metalColor\"\r\n      }\r\n      break;\r\n    }\r\n    case \"diamondType\": {\r\n      fc = {\r\n        table: \"productDiamondsByProductSku\",\r\n        type: \"diamondType\"\r\n      }\r\n      break;\r\n    }\r\n\r\n\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return filterGenerator(fc.type, value, fc.table);\r\n}\r\n\r\nexport const conditions = {\r\n  productId: (id) => ({\r\n    \"condition\": {\r\n      \"productId\": id\r\n    }\r\n  }),\r\n\r\n\r\n  generateFilters: (filters) => {\r\n    let filter = {};\r\n    const filterKeys = filters.map(val => val);\r\n\r\n    filterKeys.map(k => {\r\n      const fk = String(Object.keys(k));\r\n      const fval = String(Object.values(k));\r\n      const fquery = filterProductMatrix(fk, fval);\r\n      filter = { ...filter, ...fquery };\r\n    })\r\n\r\n    if (Object.keys(filter).length > 0) {\r\n      return { filter };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { NetworkProvider, GlobalProvider } from 'context';\r\nimport './index.css'\r\nimport Loading from 'screens/Loading';\r\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nlet outerTheme = createMuiTheme(require('./theme.json'));\r\nlet outerThemes = responsiveFontSizes(outerTheme);\r\nconst RouterApp = React.lazy(() => import('router'));  \r\n\r\n\r\n// const client = new ApolloClient({\r\n//   uri: ``,\r\n// });\r\n\r\n\r\n\r\nfunction App(props) {\r\n\r\n\r\n  // const productId = props.location.state.data\r\n\r\n  return (\r\n    // <ApolloProvider client={client}>\r\n    <GlobalProvider>\r\n      <ThemeProvider theme={outerThemes}>\r\n        <NetworkProvider>\r\n           {/*productId=\"SP1135\" <ProductDetailProvider productId=\"SP1135\">*/ }\r\n          <Router>\r\n            <React.Suspense fallback={Loading} >\r\n              <RouterApp />\r\n            </React.Suspense>\r\n          </Router>\r\n          {/* </ProductDetailProvider> */}\r\n        </NetworkProvider>\r\n      </ThemeProvider>\r\n    </GlobalProvider>\r\n    // </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport async function register(config) {\r\n  await requestNotificationPermission();\r\n\r\n  if (process.env.NODE_ENV !== 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        sendNotification('App is being cached localyy for offline purpose!')\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = async () => {\r\n          if (installingWorker.state === 'installed') {\r\n            let updating = false, \r\n              updateMessage='New version of app is installed',\r\n              installedMessage = 'Your app is installed and works offline'\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n                updating=true\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                //Display Notification\r\n                await sendNotification(updating ? updateMessage : installedMessage);\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nasync function requestNotificationPermission(){\r\n  if(!check()) return false;\r\n  const permission = await window.Notification.requestPermission();\r\n  if(permission !== 'granted'){} //alert('Enable notifications to have great experience!');\r\n  else {\r\n    if(!localStorage.getItem('firstnotify')){\r\n      await sendNotification('Ohoo.. your first notification 🎉🙌');\r\n      localStorage.setItem('firstnotify',true);\r\n    }\r\n    return true;\r\n  };\r\n}\r\n\r\nfunction check(){\r\n\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.log('Sorry notifications are not yet supported');//alert\r\n    return false;\r\n  }\r\n  if (!('PushManager' in window)) {\r\n    console.log('Sorry notifications are not yet supported');//alert\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nasync function sendNotification(message){\r\n  check() ? await new Notification(message) : await requestNotificationPermission();\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\nwindow.addEventListener('online',e => {\r\n  sendNotification('Lost internet connection !')\r\n})\r\n\r\nwindow.addEventListener('offline',e => {\r\n  sendNotification('Network connection restored !')\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}